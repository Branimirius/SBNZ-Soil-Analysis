package sbnz.integracija;

import sbnz.integracija.example.facts.Soil;
//global String recommendation;

rule "CaCO3 recommendation - Acid"
    when
        $s: Soil( pH < 6.5 )
    then	
        $s.setRecommendation($s.getRecommendation() + "CaCO3: " + (13 - (2 * $s.getpH())) + "t/ha ; \n");
        //recommendation = "5t krecnjaka";
        update($s);
end

rule "Manure recommendation - low humus"
	when
		$s: Soil( humus <= 3.0 )
	then
		$s.setRecommendation($s.getRecommendation() + "Stajnjak: 40t/ha ; \n" );
		update($s);
end	

rule "Manure recommendation"
	when
		$s: Soil( humus > 3.0, humus <= 6.8 )
	then
		$s.setRecommendation($s.getRecommendation() + "Stajnjak: " + (70 - (10* $s.getHumus())) + "t/ha ; \n");
		update($s);
end	

rule "Nitrogen recommendation raspberry"
	when 
		$s: Soil( kgN == 0.0, plant.equals("malina") )
	then 
		$s.setKgN( 400 - (1500 * $s.getNitrogen()));
		System.out.println("set kgN to " + $s.getKgN());
		update($s);
end

rule "Phosphorous recommendation raspberry"
	when 
		$s: Soil( kgP == 0.0, plant.equals("malina"))
	then 
		$s.setKgP( 100 - (5.5 * $s.getPhosphorous()));
		System.out.println("set kgP to " + $s.getKgP());
		update($s);
end

rule "Potassium recommendation raspberry"
	when 
		$s: Soil( kgK == 0.0, plant.equals("malina"))
	then 
		$s.setKgK( 240 - (9 * $s.getPotassium()));
		System.out.println("set kgK to " + $s.getKgK());
		update($s);
end

rule "NPK recommendation raspberry"
	when 
		$s: Soil( kgN != 0.0, kgP != 0.0, kgK != 0.0, plant.equals("malina"))	
	then 
		$s.setRecommendation($s.getRecommendation() + "NPK (kg/ha): " + $s.getKgN() + " " + $s.getKgP() + " " + $s.getKgK() + " \n" );
		update($s);
end

rule "Nitrogen recommendation plum"
	when 
		$s: Soil( kgN == 0.0, plant.equals("sljiva") )
	then 
		$s.setKgN( 112 - (320 * $s.getNitrogen()));
		System.out.println("set kgN to " + $s.getKgN());
		update($s);
end

rule "Phosphorous recommendation plum"
	when 
		$s: Soil( kgP == 0.0, plant.equals("sljiva"))
	then 
		$s.setKgP( 60 - (3 * $s.getPhosphorous()));
		System.out.println("set kgP to " + $s.getKgP());
		update($s);
end

rule "Potassium recommendation plum"
	when 
		$s: Soil( kgK == 0.0, plant.equals("sljiva"))
	then 
		$s.setKgK( 176 - (5.5 * $s.getPotassium()));
		System.out.println("set kgK to " + $s.getKgK());
		update($s);
end

rule "NPK recommendation plum"
	when 
		$s: Soil( kgN != 0.0, kgP != 0.0, kgK != 0.0, plant.equals("sljiva"))	
	then 
		$s.setRecommendation($s.getRecommendation() + "NPK (kg/ha): " + $s.getKgN() + " " + $s.getKgP() + " " + $s.getKgK() + " \n" );
		update($s);
end

rule "Nitrogen recommendation strawberry"
	when 
		$s: Soil( kgN == 0.0, plant.equals("jagoda") )
	then 
		$s.setKgN( 140 - (200 * $s.getNitrogen()));
		System.out.println("set kgN to " + $s.getKgN());
		update($s);
end

rule "Phosphorous recommendation strawberry"
	when 
		$s: Soil( kgP == 0.0, plant.equals("jagoda"))
	then 
		$s.setKgP( 60 - (3 * $s.getPhosphorous()));
		System.out.println("set kgP to " + $s.getKgP());
		update($s);
end

rule "Potassium recommendation strawberry"
	when 
		$s: Soil( kgK == 0.0, plant.equals("jagoda"))
	then 
		$s.setKgK( 240 - (9 * $s.getPotassium()));
		System.out.println("set kgK to " + $s.getKgK());
		update($s);
end

rule "NPK recommendation strawberry"
	when 
		$s: Soil( kgN != 0.0, kgP != 0.0, kgK != 0.0, plant.equals("jagoda"))	
	then 
		$s.setRecommendation($s.getRecommendation() + "NPK (kg/ha): " + $s.getKgN() + " " + $s.getKgP() + " " + $s.getKgK() + " \n" );
		update($s);
end

rule "Nitrogen recommendation blackberry"
	when 
		$s: Soil( kgN == 0.0, plant.equals("kupina") )
	then 
		$s.setKgN( 200 - (500 * $s.getNitrogen()));
		System.out.println("set kgN to " + $s.getKgN());
		update($s);
end

rule "Phosphorous recommendation blackberry"
	when 
		$s: Soil( kgP == 0.0, plant.equals("kupina"))
	then 
		$s.setKgP( 155 - (11 * $s.getPhosphorous()));
		System.out.println("set kgP to " + $s.getKgP());
		update($s);
end

rule "Potassium recommendation blackberry"
	when 
		$s: Soil( kgK == 0.0, plant.equals("kupina"))
	then 
		$s.setKgK( 350 - (12.5 * $s.getPotassium()));
		System.out.println("set kgK to " + $s.getKgK());
		update($s);
end

rule "NPK recommendation blackberry"
	when 
		$s: Soil( kgN != 0.0, kgP != 0.0, kgK != 0.0, plant.equals("kupina"))	
	then 
		$s.setRecommendation($s.getRecommendation() + "NPK (kg/ha): " + $s.getKgN() + ", " + $s.getKgP() + ", " + $s.getKgK() + " \n" );
		update($s);
end


		
	
	
		
		 