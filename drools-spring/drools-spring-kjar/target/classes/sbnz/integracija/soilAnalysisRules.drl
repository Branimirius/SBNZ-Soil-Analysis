package sbnz.integracija;

import sbnz.integracija.example.facts.Soil;
//global String recommendation;

rule "CaCO3 recommendation - Acid"
	salience 5
	no-loop 
    when
        $s: Soil( pH < 6.5, plant.equals("") == false, $r: recommendation, phFixed == false )
        
    then	
        //$s.setRecommendation($s.getRecommendation() + "CaCO3: " + (13 - (2 * $s.getpH())) + "t/ha ; \n");
        //recommendation = "5t krecnjaka";
        $s.setPhFixed(true);
        $r.setCaco3((13 - (2 * $s.getpH())));
        
        $s.setRecommendation($r);
        update($s);
end

rule "Manure recommendation - low humus"
	salience 5 
	no-loop
	when
		$s: Soil( humus <= 3.0, plant.equals("") == false, $r: recommendation != null, humusFixed == false )
	then
		$s.setHumusFixed(true);
		$r.setManure(40.0);
		$s.setRecommendation($r);
		update($s);
end	

rule "Manure recommendation"
	salience 5 
	no-loop
	when
		$s: Soil( humus > 3.0, humus <= 6.8, plant.equals("") == false, $r: recommendation != null, humusFixed == false )
	then
		$r.setManure((70 - (10* $s.getHumus())));
		$s.setRecommendation($r);
		update($s);
end	

rule "Nitrogen recommendation raspberry"
	salience 4 
	when 
		$s: Soil( kgN == 1.0, plant.equals("malina") )
	then 
		$s.setKgN( 400 - (1500 * $s.getNitrogen()));
		System.out.println("set kgN to " + $s.getKgN());
		update($s);
end

rule "Phosphorous recommendation raspberry"
	salience 4 
	when 
		$s: Soil( kgP == 1.0, plant.equals("malina"))
	then 
		$s.setKgP( 100 - (4 * $s.getPhosphorous()));
		System.out.println("set kgP to " + $s.getKgP());
		update($s);
end

rule "Potassium recommendation raspberry"
	salience 4 
	when 
		$s: Soil( kgK == 1.0, plant.equals("malina"))
	then 
		$s.setKgK( 160 - (4 * $s.getPotassium()));
		System.out.println("set kgK to " + $s.getKgK());
		update($s);
end

rule "NPK recommendation raspberry"
	salience 3 
	when 
		$s: Soil( kgN != 1.0, kgP != 1.0, kgK != 1.0, plant.equals("malina"), $r: recommendation != null, npkFixed == false)	
	then 
		$r.setKgNPK("NPK (kg/ha): " + $s.getKgN() + ", " + $s.getKgP() + ", " + $s.getKgK());
		$s.setRecommendation($r);
		$s.setNpkFixed(true);
		System.out.println($s.getRecommendation().getKgNPK());
		update($s);
end

rule "Nitrogen recommendation plum"
	salience 4 
	when 
		$s: Soil( kgN == 1.0, plant.equals("sljiva") )
	then 
		$s.setKgN( 112 - (320 * $s.getNitrogen()));
		System.out.println("set kgN to " + $s.getKgN());
		update($s);
end

rule "Phosphorous recommendation plum"
	salience 4 
	when 
		$s: Soil( kgP == 1.0, plant.equals("sljiva"))
	then 
		$s.setKgP( 60 - (3 * $s.getPhosphorous()));
		System.out.println("set kgP to " + $s.getKgP());
		update($s);
end

rule "Potassium recommendation plum"
	salience 4 
	when 
		$s: Soil( kgK == 1.0, plant.equals("sljiva"))
	then 
		$s.setKgK( 176 - (5.5 * $s.getPotassium()));
		System.out.println("set kgK to " + $s.getKgK());
		update($s);
end

rule "NPK recommendation plum"
	salience 3 
	when 
		$s: Soil( kgN != 1.0, kgP != 1.0, kgK != 1.0, plant.equals("sljiva"), $r: recommendation != null, npkFixed == false)	
	then 
		$r.setKgNPK("NPK (kg/ha): " + $s.getKgN() + ", " + $s.getKgP() + ", " + $s.getKgK());
		$s.setRecommendation($r);
		$s.setNpkFixed(true);
		update($s);
end

rule "Nitrogen recommendation strawberry"
	salience 4 
	when 
		$s: Soil( kgN == 1.0, plant.equals("jagoda") )
	then 
		$s.setKgN( 140 - (200 * $s.getNitrogen()));
		System.out.println("set kgN to " + $s.getKgN());
		update($s);
end

rule "Phosphorous recommendation strawberry"
	salience 4 
	when 
		$s: Soil( kgP == 1.0, plant.equals("jagoda"))
	then 
		$s.setKgP( 60 - (3 * $s.getPhosphorous()));
		System.out.println("set kgP to " + $s.getKgP());
		update($s);
end

rule "Potassium recommendation strawberry"
	salience 4 
	when 
		$s: Soil( kgK == 1.0, plant.equals("jagoda"))
	then 
		$s.setKgK( 240 - (9 * $s.getPotassium()));
		System.out.println("set kgK to " + $s.getKgK());
		update($s);
end

rule "NPK recommendation strawberry"
	salience 3 
	when 
		$s: Soil( kgN != 1.0, kgP != 1.0, kgK != 1.0, plant.equals("jagoda"), $r: recommendation != null, npkFixed == false)	
	then 
		$r.setKgNPK("NPK (kg/ha): " + $s.getKgN() + ", " + $s.getKgP() + ", " + $s.getKgK());
		$s.setRecommendation($r);
		$s.setNpkFixed(true);
		update($s);
end

rule "Nitrogen recommendation blackberry"
	salience 4 
	when 
		$s: Soil( kgN == 1.0, plant.equals("kupina") )
	then 
		$s.setKgN( 200 - (500 * $s.getNitrogen()));
		System.out.println("set kgN to " + $s.getKgN());
		update($s);
end

rule "Phosphorous recommendation blackberry"
	salience 4 
	when 
		$s: Soil( kgP == 1.0, plant.equals("kupina"))
	then 
		$s.setKgP( 155 - (11 * $s.getPhosphorous()));
		System.out.println("set kgP to " + $s.getKgP());
		update($s);
end

rule "Potassium recommendation blackberry"
	salience 4 
	when 
		$s: Soil( kgK == 1.0, plant.equals("kupina"))
	then 
		$s.setKgK( 350 - (12.5 * $s.getPotassium()));
		System.out.println("set kgK to " + $s.getKgK());
		update($s);
end

rule "Make it positive"
	salience 4
	when 
		$s: Soil(kgK <= 0.0 || kgN <= 0.0 || kgP <= 0.0)
	then
		$s.setPositive();
		update($s);
end

rule "NPK recommendation blackberry"
	salience 3 
	when 
		$s: Soil( kgN != 1.0, kgP != 1.0, kgK != 1.0, plant.equals("kupina"), $r: recommendation != null, npkFixed == false)	
	then 
		$r.setKgNPK("NPK (kg/ha): " + $s.getKgN() + ", " + $s.getKgP() + ", " + $s.getKgK());
		$s.setRecommendation($r);
		$s.setNpkFixed(true);
		update($s);
end





		
	
	
		
		 